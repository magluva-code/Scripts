#!/usr/bin/env bash


# Script for helping to perform system maintenance.

################################################################################
#    DECLARATIONS
################################################################################

LSB="/usr/bin/lsb_release"
START=$(date)
LOG_PREFIX=$(date +%d%m%y"-"%T)

LOGFILE=$(touch "sysop_$LOG_PREFIX.log")
################################################################################
#    FUNCTIONS
################################################################################

usage()
{
  cat << EOF
  usage: $0 options
  ------------------------------------------------------------
  TODO

  OPTIONS:
    TODO

  ------------------------------------------------------------
EOF
}

option_header()
{
  local hdr="$@"
  cat << EOF
***************************************************
   $hdr
***************************************************
EOF
}

print_menu()
{
  local main_menu_hdr=$(header "Main Menu")
  cat << EOF
|=================================================="
| Logfile created $START |
|-------------------------------------------------|
|   Main Menu                                     |
|-------------------------------------------------|
|   1) OS info                                    |
|   2) Host and DNS info                          |
|   3) Network info                               |
|   4) Package management                         |
|   5) Quit                                       |
|=================================================|
EOF
}

pause()
{
  local msg="$@"
  if [[ -z $msg ]]; then
    msg="Press [ENTER] to continue.."
  fi
  read -p "$msg" readEnterKey
}

os_info()
{
  option_header "OS INFO"
  echo "Operating system : $(uname)"
  [ -x $LSB ] && $LSB -a
  pause
}

host_info()
{
  option_header "HOST INFO"
  echo "Not implemented yet.."
  pause
}

network_info()
{
  option_header "NETWORK INFO"
  echo "Not implemented yet.."
  pause
}

pkg_management()
{
  option_header "PACKAGE MANAGEMENT"
  echo "|   1) Show orphan packages."
  echo "|   2) Show foreign packages."
  echo "|   3) Write orphan packages to file."
  echo "|   4) Write foreign packages to file."
  echo "***************************************************"
  read_input_pkg_management

}

show_orph_pkgs()
{
  echo "$(pacman -Qtd)"
}

show_foreign_pkgs()
{
  echo "$(pacman -Qm)"
  pause
}

write_orph_pkgs_to_file()
{
  local file_name="orphan_pkgs.txt"
  echo "$(show_orph_pkgs)" > $file_name
  echo "List written to file: $file_name"
  pause
}

write_foreign_pkgs_to_file()
{
  local file_name="foreign_pkgs.txt"
  echo "$(show_foreign_pkgs)" > $file_name
  echo "List written to file: $file_name"
  pause
}

read_input_pkg_management()
{
  local c
  read -p "Choose operation" c
  case $c in
    1)
      show_orph_pkgs
      ;;
    2)
      show_foreign_pkgs
      ;;
    3)
      write_orph_pkgs_to_file
      ;;
    4)
      write_foreign_pkgs_to_file
      ;;
    *)
    pause
  esac
}

read_input_main()
{
  local c
  read -p "Choose operation: " c
  case $c in
    1)
      os_info
      ;;
    2)
      host_info
      ;;
    3)
      network_info
      ;;
    4)
      pkg_management
      ;;
    5)
      exit 0
      ;;
    *)
  pause
  esac
}

################################################################################
#    MAIN
################################################################################
print_menu
read_input_main
